- hosts: masters
  # use privilege (default : root)
  become: yes
  vars_files:
  - env_variables
  # method to use privilege
  become_method: sudo
  tasks:
  # task settings
  - name: Setting hostname
    shell: |
      hostnamectl set-hostname master
      cat <<EOF>> /etc/hosts
      192.168.10.189 master
      192.168.10.168 node-1
      EOF

  - name: Disabling Swap on all nodes
    shell: |
     swapoff -a
     sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

  - name: disable SELinux
    command: setenforce 0
    ignore_errors: yes

  - name: disable SELinux on reboot
    selinux:
      state: disabled

  - name: Creating a repository file for Kubernetes
    file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch

  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
     path: /etc/yum.repos.d/kubernetes.repo
     block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Installing Docker
    shell: |
     dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
     yum install docker-ce -y --nobest

  - name: Reconfig containerd
    shell: |
      rm -rf /etc/containerd/config.toml
      systemctl restart containerd
      systemctl enable docker
      systemctl start docker

  - name: Installing required packages
    yum:
     name: "{{ packages }}"
     state: present

  - name: Starting and Enabling the required services
    service:
     name: "{{ item }}"
     state: started
     enabled: yes
    with_items: "{{ services }}"

  - name: Allow Network Ports in Firewalld
    ansible.posix.firewalld:
     port: "{{ item }}"
     state: enabled
     permanent: yes
     immediate: yes
    with_items: "{{ master_ports }}"

  - name: Allow masquerading in Firewalld
    ansible.posix.firewalld:
      masquerade: "yes"
      state: enabled
      permanent: yes
      immediate: yes

  - name: Enabling Bridge Firewall Rule
    shell: "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"

  - name: initialize the cluster
    shell: kubeadm init --apiserver-advertise-address=192.168.10.189 --pod-network-cidr=192.168.0.0/16
    register: output   

  - debug: msg="{{ output }}"

  - name: Storing Logs and Generated token for future purpose.
    local_action: copy content={{ output.stdout }} dest={{ token_file }}

  - name: Copying required files
    shell: |
     mkdir -p $HOME/.kube
     sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
     sudo chown $(id -u):$(id -g) $HOME/.kube/config

  # - name: Install Network Add-on
  #   command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  - name: Install Network Add-on
    shell: |
     export kubever=$(kubectl version | base64 | tr -d '\n')
     kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"